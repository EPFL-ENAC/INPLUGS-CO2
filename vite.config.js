// vite.config.js
import { defineConfig } from "vite";
import { createMultiLocalePlugin } from "./plugins/multi-locale-plugin.js";
import { ViteImageOptimizer } from "vite-plugin-image-optimizer";

export default defineConfig({
  plugins: [
    createMultiLocalePlugin({
      srcDir: "src",
      pagesDir: "src/pages",
      layoutsDir: "src/layouts",
      partialsDir: "src/partials",
      dataDir: "src/data",
      outputDir: "dist",
      defaultLocale: "en",
      locales: ["en", "fr"],
      siteUrl: "https://example.com",
      localesMeta: {
        en: { name: "English", rtl: false },
        fr: { name: "Fran√ßais", rtl: false },
      },
      emitSitemaps: true,
      emit404s: true,
      linkRewrite: "safety-net",
    }),
    // Virtual entry plugin to provide the required input
    {
      name: "virtual-entry",
      resolveId(id) {
        if (id === "virtual:static-site") {
          return id;
        }
      },
      load(id) {
        if (id === "virtual:static-site") {
          return "// Static site generated by multi-locale plugin";
        }
      },
    },
    // Image optimization plugin
    ViteImageOptimizer({
      png: {
        quality: 85,
      },
      jpeg: {
        quality: 85,
      },
      jpg: {
        quality: 85,
      },
      tiff: {
        quality: 85,
      },
      gif: {},
      webp: {
        quality: 85,
      },
      avif: {
        quality: 85,
      },
      svg: {
        multipass: true,
        plugins: [
          {
            name: "preset-default",
            params: {
              overrides: {
                removeViewBox: false,
              },
            },
          },
        ],
      },
    }),
  ],
  // Don't use publicDir since we're handling our own static generation
  publicDir: false,
  build: {
    // Output directory
    outDir: "dist",
    // Don't empty the directory since our plugin creates files there
    emptyOutDir: false,
    // Enable minification
    minify: "terser",
    // Terser options for JS minification
    terserOptions: {
      compress: {
        drop_console: true,
        drop_debugger: true,
      },
    },
    // CSS minification
    cssMinify: true,
    // Provide a virtual entry point for Rollup
    rollupOptions: {
      input: "virtual:static-site",
      output: {
        // Generate minimal JS output that we can ignore
        entryFileNames: ".vite/[name].js",
      },
    },
  },
});
